// <auto-generated />
using System;
using AveneoRerutacja.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AveneoRerutacja.Migrations.ExchangeRatesDb
{
    [DbContext(typeof(ExchangeRatesDbContext))]
    partial class ExchangeRatesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("AveneoRerutacja.Dimension.DateClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Dates");
                });

            modelBuilder.Entity("AveneoRerutacja.Domain.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("AveneoRerutacja.Domain.DailyRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("DateClassId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DateClassId");

                    b.ToTable("DailyRates");
                });

            modelBuilder.Entity("CurrencyDailyRate", b =>
                {
                    b.Property<int>("CurrenciesId")
                        .HasColumnType("integer");

                    b.Property<int>("DailyRatesId")
                        .HasColumnType("integer");

                    b.HasKey("CurrenciesId", "DailyRatesId");

                    b.HasIndex("DailyRatesId");

                    b.ToTable("CurrencyDailyRate");
                });

            modelBuilder.Entity("AveneoRerutacja.Domain.DailyRate", b =>
                {
                    b.HasOne("AveneoRerutacja.Dimension.DateClass", null)
                        .WithMany("DailyRates")
                        .HasForeignKey("DateClassId");
                });

            modelBuilder.Entity("CurrencyDailyRate", b =>
                {
                    b.HasOne("AveneoRerutacja.Domain.Currency", null)
                        .WithMany()
                        .HasForeignKey("CurrenciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AveneoRerutacja.Domain.DailyRate", null)
                        .WithMany()
                        .HasForeignKey("DailyRatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AveneoRerutacja.Dimension.DateClass", b =>
                {
                    b.Navigation("DailyRates");
                });
#pragma warning restore 612, 618
        }
    }
}
