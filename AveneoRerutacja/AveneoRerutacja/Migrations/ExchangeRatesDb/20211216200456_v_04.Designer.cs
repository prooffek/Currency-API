// <auto-generated />
using System;
using AveneoRerutacja.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AveneoRerutacja.Migrations.ExchangeRatesDb
{
    [DbContext(typeof(ExchangeRatesDbContext))]
    [Migration("20211216200456_v_04")]
    partial class v_04
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("AveneoRerutacja.Dimension.DateClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Dates");
                });

            modelBuilder.Entity("AveneoRerutacja.Domain.DailyRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("DateClassId")
                        .HasColumnType("integer");

                    b.Property<int?>("SourceCurrencyId")
                        .HasColumnType("integer");

                    b.Property<int?>("TargetCurrencyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DateClassId");

                    b.HasIndex("SourceCurrencyId");

                    b.HasIndex("TargetCurrencyId");

                    b.ToTable("DailyRates");
                });

            modelBuilder.Entity("AveneoRerutacja.Domain.SourceCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SourceCurrencies");
                });

            modelBuilder.Entity("AveneoRerutacja.Domain.TargetCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TargetCurrencies");
                });

            modelBuilder.Entity("AveneoRerutacja.Domain.DailyRate", b =>
                {
                    b.HasOne("AveneoRerutacja.Dimension.DateClass", null)
                        .WithMany("DailyRates")
                        .HasForeignKey("DateClassId");

                    b.HasOne("AveneoRerutacja.Domain.SourceCurrency", null)
                        .WithMany("DailyRates")
                        .HasForeignKey("SourceCurrencyId");

                    b.HasOne("AveneoRerutacja.Domain.TargetCurrency", null)
                        .WithMany("DailyRates")
                        .HasForeignKey("TargetCurrencyId");
                });

            modelBuilder.Entity("AveneoRerutacja.Dimension.DateClass", b =>
                {
                    b.Navigation("DailyRates");
                });

            modelBuilder.Entity("AveneoRerutacja.Domain.SourceCurrency", b =>
                {
                    b.Navigation("DailyRates");
                });

            modelBuilder.Entity("AveneoRerutacja.Domain.TargetCurrency", b =>
                {
                    b.Navigation("DailyRates");
                });
#pragma warning restore 612, 618
        }
    }
}
